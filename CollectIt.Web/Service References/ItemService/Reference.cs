//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CollectIt.Web.ItemService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemContract", Namespace="http://schemas.datacontract.org/2004/07/CollectIt.WCF.Contracts")]
    [System.SerializableAttribute()]
    public partial class ItemContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublishedDateRFC822Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishedDate {
            get {
                return this.PublishedDateField;
            }
            set {
                if ((this.PublishedDateField.Equals(value) != true)) {
                    this.PublishedDateField = value;
                    this.RaisePropertyChanged("PublishedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublishedDateRFC822 {
            get {
                return this.PublishedDateRFC822Field;
            }
            set {
                if ((object.ReferenceEquals(this.PublishedDateRFC822Field, value) != true)) {
                    this.PublishedDateRFC822Field = value;
                    this.RaisePropertyChanged("PublishedDateRFC822");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ItemService.IItemService")]
    public interface IItemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/All", ReplyAction="http://tempuri.org/IItemService/AllResponse")]
        CollectIt.Web.ItemService.ItemContract[] All(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/All", ReplyAction="http://tempuri.org/IItemService/AllResponse")]
        System.Threading.Tasks.Task<CollectIt.Web.ItemService.ItemContract[]> AllAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/Latest", ReplyAction="http://tempuri.org/IItemService/LatestResponse")]
        CollectIt.Web.ItemService.ItemContract[] Latest(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/Latest", ReplyAction="http://tempuri.org/IItemService/LatestResponse")]
        System.Threading.Tasks.Task<CollectIt.Web.ItemService.ItemContract[]> LatestAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/Query", ReplyAction="http://tempuri.org/IItemService/QueryResponse")]
        CollectIt.Web.ItemService.ItemContract[] Query(string userId, string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemService/Query", ReplyAction="http://tempuri.org/IItemService/QueryResponse")]
        System.Threading.Tasks.Task<CollectIt.Web.ItemService.ItemContract[]> QueryAsync(string userId, string searchString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IItemServiceChannel : CollectIt.Web.ItemService.IItemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemServiceClient : System.ServiceModel.ClientBase<CollectIt.Web.ItemService.IItemService>, CollectIt.Web.ItemService.IItemService {
        
        public ItemServiceClient() {
        }
        
        public ItemServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ItemServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItemServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItemServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CollectIt.Web.ItemService.ItemContract[] All(string userId) {
            return base.Channel.All(userId);
        }
        
        public System.Threading.Tasks.Task<CollectIt.Web.ItemService.ItemContract[]> AllAsync(string userId) {
            return base.Channel.AllAsync(userId);
        }
        
        public CollectIt.Web.ItemService.ItemContract[] Latest(string userId) {
            return base.Channel.Latest(userId);
        }
        
        public System.Threading.Tasks.Task<CollectIt.Web.ItemService.ItemContract[]> LatestAsync(string userId) {
            return base.Channel.LatestAsync(userId);
        }
        
        public CollectIt.Web.ItemService.ItemContract[] Query(string userId, string searchString) {
            return base.Channel.Query(userId, searchString);
        }
        
        public System.Threading.Tasks.Task<CollectIt.Web.ItemService.ItemContract[]> QueryAsync(string userId, string searchString) {
            return base.Channel.QueryAsync(userId, searchString);
        }
    }
}
