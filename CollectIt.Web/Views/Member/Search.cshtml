@model CollectIt.Web.Models.ViewModels.MemberSearchViewModel
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Search</h2>
<h5>This searches the entire RSS cache. Not just based on your own subscription filters, but in content harvested by other users keywords as well.</h5>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Filters, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Filters, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Filters, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<h3>Results</h3>
<div class="row">
    <div class="col-lg-12">
        <table class="table table-striped">
            <tr>
                <th>
                    Name
                </th>
                <th style="width: 30px">
                    Link
                </th>
                <th>
                    Content
                </th>
                <th>Published</th>
            </tr>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@item.Title</td>
                    <td><a href="@item.Link">Click here</a></td>
                    <td>@Model.StripHtml(item.Description)</td>
                    <td>@item.PublishedDate</td>
                </tr>
            }

        </table>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
